"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/multipipe";
exports.ids = ["vendor-chunks/multipipe"];
exports.modules = {

/***/ "(ssr)/./node_modules/multipipe/index.js":
/*!*****************************************!*\
  !*** ./node_modules/multipipe/index.js ***!
  \*****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/**\n * Module dependencies.\n */ \nvar duplexer = __webpack_require__(/*! duplexer2 */ \"(ssr)/./node_modules/duplexer2/index.js\");\nvar PassThrough = (__webpack_require__(/*! stream */ \"stream\").PassThrough);\nvar Readable = (__webpack_require__(/*! stream */ \"stream\").PassThrough);\nvar objectAssign = __webpack_require__(/*! object-assign */ \"(ssr)/./node_modules/object-assign/index.js\");\n/**\n * Slice reference.\n */ var slice = [].slice;\n/**\n * Duplexer options.\n */ var defaultOpts = {\n    bubbleErrors: false,\n    objectMode: true\n};\n/**\n * Expose `pipe`.\n */ module.exports = pipe;\n/**\n * Pipe.\n *\n * @param streams Array[Stream,...]\n * @param opts [Object]\n * @param cb [Function]\n * @return {Stream}\n * @api public\n */ function pipe(streams, opts, cb) {\n    if (!Array.isArray(streams)) {\n        streams = slice.call(arguments);\n        opts = null;\n        cb = null;\n    }\n    var lastArg = streams[streams.length - 1];\n    if (\"function\" == typeof lastArg) {\n        cb = streams.splice(-1)[0];\n        lastArg = streams[streams.length - 1];\n    }\n    if (\"object\" == typeof lastArg && typeof lastArg.pipe != \"function\") {\n        opts = streams.splice(-1)[0];\n    }\n    var first = streams[0];\n    var last = streams[streams.length - 1];\n    var ret;\n    opts = objectAssign({}, defaultOpts, opts);\n    if (!first) {\n        if (cb) process.nextTick(cb);\n        return new PassThrough(opts);\n    }\n    if (first.writable && last.readable) ret = duplexer(opts, first, last);\n    else if (streams.length == 1) ret = new Readable(opts).wrap(streams[0]);\n    else if (first.writable) ret = first;\n    else if (last.readable) ret = last;\n    else ret = new PassThrough(opts);\n    streams.forEach(function(stream, i) {\n        var next = streams[i + 1];\n        if (next) stream.pipe(next);\n        if (stream != ret) stream.on(\"error\", ret.emit.bind(ret, \"error\"));\n    });\n    if (cb) {\n        var ended = false;\n        ret.on(\"error\", end);\n        last.on(\"finish\", function() {\n            end();\n        });\n        last.on(\"close\", function() {\n            end();\n        });\n        function end(err) {\n            if (ended) return;\n            ended = true;\n            cb(err);\n        }\n    }\n    return ret;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbXVsdGlwaXBlL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUNBOztDQUVDO0FBRUQsSUFBSUEsV0FBV0MsbUJBQU9BLENBQUM7QUFDdkIsSUFBSUMsY0FBY0QseURBQTZCO0FBQy9DLElBQUlFLFdBQVdGLHlEQUE2QjtBQUM1QyxJQUFJRyxlQUFlSCxtQkFBT0EsQ0FBQztBQUUzQjs7Q0FFQyxHQUVELElBQUlJLFFBQVEsRUFBRSxDQUFDQSxLQUFLO0FBRXBCOztDQUVDLEdBRUQsSUFBSUMsY0FBYztJQUNoQkMsY0FBYztJQUNkQyxZQUFZO0FBQ2Q7QUFFQTs7Q0FFQyxHQUVEQyxPQUFPQyxPQUFPLEdBQUdDO0FBRWpCOzs7Ozs7OztDQVFDLEdBRUQsU0FBU0EsS0FBS0MsT0FBTyxFQUFFQyxJQUFJLEVBQUVDLEVBQUU7SUFDN0IsSUFBSSxDQUFDQyxNQUFNQyxPQUFPLENBQUNKLFVBQVU7UUFDM0JBLFVBQVVQLE1BQU1ZLElBQUksQ0FBQ0M7UUFDckJMLE9BQU87UUFDUEMsS0FBSztJQUNQO0lBRUEsSUFBSUssVUFBVVAsT0FBTyxDQUFDQSxRQUFRUSxNQUFNLEdBQUcsRUFBRTtJQUN6QyxJQUFJLGNBQWMsT0FBT0QsU0FBUztRQUNoQ0wsS0FBS0YsUUFBUVMsTUFBTSxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUU7UUFDMUJGLFVBQVVQLE9BQU8sQ0FBQ0EsUUFBUVEsTUFBTSxHQUFHLEVBQUU7SUFDdkM7SUFDQSxJQUFJLFlBQVksT0FBT0QsV0FBVyxPQUFPQSxRQUFRUixJQUFJLElBQUksWUFBWTtRQUNuRUUsT0FBT0QsUUFBUVMsTUFBTSxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUU7SUFDOUI7SUFDQSxJQUFJQyxRQUFRVixPQUFPLENBQUMsRUFBRTtJQUN0QixJQUFJVyxPQUFPWCxPQUFPLENBQUNBLFFBQVFRLE1BQU0sR0FBRyxFQUFFO0lBQ3RDLElBQUlJO0lBQ0pYLE9BQU9ULGFBQWEsQ0FBQyxHQUFHRSxhQUFhTztJQUVyQyxJQUFJLENBQUNTLE9BQU87UUFDVixJQUFJUixJQUFJVyxRQUFRQyxRQUFRLENBQUNaO1FBQ3pCLE9BQU8sSUFBSVosWUFBWVc7SUFDekI7SUFFQSxJQUFJUyxNQUFNSyxRQUFRLElBQUlKLEtBQUtLLFFBQVEsRUFBRUosTUFBTXhCLFNBQVNhLE1BQU1TLE9BQU9DO1NBQzVELElBQUlYLFFBQVFRLE1BQU0sSUFBSSxHQUFHSSxNQUFNLElBQUlyQixTQUFTVSxNQUFNZ0IsSUFBSSxDQUFDakIsT0FBTyxDQUFDLEVBQUU7U0FDakUsSUFBSVUsTUFBTUssUUFBUSxFQUFFSCxNQUFNRjtTQUMxQixJQUFJQyxLQUFLSyxRQUFRLEVBQUVKLE1BQU1EO1NBQ3pCQyxNQUFNLElBQUl0QixZQUFZVztJQUUzQkQsUUFBUWtCLE9BQU8sQ0FBQyxTQUFTQyxNQUFNLEVBQUVDLENBQUM7UUFDaEMsSUFBSUMsT0FBT3JCLE9BQU8sQ0FBQ29CLElBQUUsRUFBRTtRQUN2QixJQUFJQyxNQUFNRixPQUFPcEIsSUFBSSxDQUFDc0I7UUFDdEIsSUFBSUYsVUFBVVAsS0FBS08sT0FBT0csRUFBRSxDQUFDLFNBQVNWLElBQUlXLElBQUksQ0FBQ0MsSUFBSSxDQUFDWixLQUFLO0lBQzNEO0lBRUEsSUFBSVYsSUFBSTtRQUNOLElBQUl1QixRQUFRO1FBQ1piLElBQUlVLEVBQUUsQ0FBQyxTQUFTSTtRQUNoQmYsS0FBS1csRUFBRSxDQUFDLFVBQVU7WUFBWUk7UUFBTTtRQUNwQ2YsS0FBS1csRUFBRSxDQUFDLFNBQVM7WUFBWUk7UUFBTTtRQUNuQyxTQUFTQSxJQUFJQyxHQUFHO1lBQ2QsSUFBSUYsT0FBTztZQUNYQSxRQUFRO1lBQ1J2QixHQUFHeUI7UUFDTDtJQUNGO0lBRUEsT0FBT2Y7QUFDVCIsInNvdXJjZXMiOlsid2VicGFjazovL2JpZ2NvbW1lcmNlLy4vbm9kZV9tb2R1bGVzL211bHRpcGlwZS9pbmRleC5qcz8yNTY0Il0sInNvdXJjZXNDb250ZW50IjpbIlxuLyoqXG4gKiBNb2R1bGUgZGVwZW5kZW5jaWVzLlxuICovXG5cbnZhciBkdXBsZXhlciA9IHJlcXVpcmUoJ2R1cGxleGVyMicpO1xudmFyIFBhc3NUaHJvdWdoID0gcmVxdWlyZSgnc3RyZWFtJykuUGFzc1Rocm91Z2g7XG52YXIgUmVhZGFibGUgPSByZXF1aXJlKCdzdHJlYW0nKS5QYXNzVGhyb3VnaDtcbnZhciBvYmplY3RBc3NpZ24gPSByZXF1aXJlKCdvYmplY3QtYXNzaWduJyk7XG5cbi8qKlxuICogU2xpY2UgcmVmZXJlbmNlLlxuICovXG5cbnZhciBzbGljZSA9IFtdLnNsaWNlO1xuXG4vKipcbiAqIER1cGxleGVyIG9wdGlvbnMuXG4gKi9cblxudmFyIGRlZmF1bHRPcHRzID0ge1xuICBidWJibGVFcnJvcnM6IGZhbHNlLFxuICBvYmplY3RNb2RlOiB0cnVlXG59O1xuXG4vKipcbiAqIEV4cG9zZSBgcGlwZWAuXG4gKi9cblxubW9kdWxlLmV4cG9ydHMgPSBwaXBlO1xuXG4vKipcbiAqIFBpcGUuXG4gKlxuICogQHBhcmFtIHN0cmVhbXMgQXJyYXlbU3RyZWFtLC4uLl1cbiAqIEBwYXJhbSBvcHRzIFtPYmplY3RdXG4gKiBAcGFyYW0gY2IgW0Z1bmN0aW9uXVxuICogQHJldHVybiB7U3RyZWFtfVxuICogQGFwaSBwdWJsaWNcbiAqL1xuXG5mdW5jdGlvbiBwaXBlKHN0cmVhbXMsIG9wdHMsIGNiKXtcbiAgaWYgKCFBcnJheS5pc0FycmF5KHN0cmVhbXMpKSB7XG4gICAgc3RyZWFtcyA9IHNsaWNlLmNhbGwoYXJndW1lbnRzKTtcbiAgICBvcHRzID0gbnVsbDtcbiAgICBjYiA9IG51bGw7XG4gIH1cblxuICB2YXIgbGFzdEFyZyA9IHN0cmVhbXNbc3RyZWFtcy5sZW5ndGggLSAxXTtcbiAgaWYgKCdmdW5jdGlvbicgPT0gdHlwZW9mIGxhc3RBcmcpIHtcbiAgICBjYiA9IHN0cmVhbXMuc3BsaWNlKC0xKVswXTtcbiAgICBsYXN0QXJnID0gc3RyZWFtc1tzdHJlYW1zLmxlbmd0aCAtIDFdO1xuICB9XG4gIGlmICgnb2JqZWN0JyA9PSB0eXBlb2YgbGFzdEFyZyAmJiB0eXBlb2YgbGFzdEFyZy5waXBlICE9ICdmdW5jdGlvbicpIHtcbiAgICBvcHRzID0gc3RyZWFtcy5zcGxpY2UoLTEpWzBdO1xuICB9XG4gIHZhciBmaXJzdCA9IHN0cmVhbXNbMF07XG4gIHZhciBsYXN0ID0gc3RyZWFtc1tzdHJlYW1zLmxlbmd0aCAtIDFdO1xuICB2YXIgcmV0O1xuICBvcHRzID0gb2JqZWN0QXNzaWduKHt9LCBkZWZhdWx0T3B0cywgb3B0cylcblxuICBpZiAoIWZpcnN0KSB7XG4gICAgaWYgKGNiKSBwcm9jZXNzLm5leHRUaWNrKGNiKTtcbiAgICByZXR1cm4gbmV3IFBhc3NUaHJvdWdoKG9wdHMpO1xuICB9XG4gIFxuICBpZiAoZmlyc3Qud3JpdGFibGUgJiYgbGFzdC5yZWFkYWJsZSkgcmV0ID0gZHVwbGV4ZXIob3B0cywgZmlyc3QsIGxhc3QpO1xuICBlbHNlIGlmIChzdHJlYW1zLmxlbmd0aCA9PSAxKSByZXQgPSBuZXcgUmVhZGFibGUob3B0cykud3JhcChzdHJlYW1zWzBdKTtcbiAgZWxzZSBpZiAoZmlyc3Qud3JpdGFibGUpIHJldCA9IGZpcnN0O1xuICBlbHNlIGlmIChsYXN0LnJlYWRhYmxlKSByZXQgPSBsYXN0O1xuICBlbHNlIHJldCA9IG5ldyBQYXNzVGhyb3VnaChvcHRzKTtcbiAgXG4gIHN0cmVhbXMuZm9yRWFjaChmdW5jdGlvbihzdHJlYW0sIGkpe1xuICAgIHZhciBuZXh0ID0gc3RyZWFtc1tpKzFdO1xuICAgIGlmIChuZXh0KSBzdHJlYW0ucGlwZShuZXh0KTtcbiAgICBpZiAoc3RyZWFtICE9IHJldCkgc3RyZWFtLm9uKCdlcnJvcicsIHJldC5lbWl0LmJpbmQocmV0LCAnZXJyb3InKSk7XG4gIH0pO1xuXG4gIGlmIChjYikge1xuICAgIHZhciBlbmRlZCA9IGZhbHNlO1xuICAgIHJldC5vbignZXJyb3InLCBlbmQpO1xuICAgIGxhc3Qub24oJ2ZpbmlzaCcsIGZ1bmN0aW9uKCl7IGVuZCgpIH0pO1xuICAgIGxhc3Qub24oJ2Nsb3NlJywgZnVuY3Rpb24oKXsgZW5kKCkgfSk7XG4gICAgZnVuY3Rpb24gZW5kKGVycil7XG4gICAgICBpZiAoZW5kZWQpIHJldHVybjtcbiAgICAgIGVuZGVkID0gdHJ1ZTtcbiAgICAgIGNiKGVycik7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHJldDtcbn1cblxuIl0sIm5hbWVzIjpbImR1cGxleGVyIiwicmVxdWlyZSIsIlBhc3NUaHJvdWdoIiwiUmVhZGFibGUiLCJvYmplY3RBc3NpZ24iLCJzbGljZSIsImRlZmF1bHRPcHRzIiwiYnViYmxlRXJyb3JzIiwib2JqZWN0TW9kZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJwaXBlIiwic3RyZWFtcyIsIm9wdHMiLCJjYiIsIkFycmF5IiwiaXNBcnJheSIsImNhbGwiLCJhcmd1bWVudHMiLCJsYXN0QXJnIiwibGVuZ3RoIiwic3BsaWNlIiwiZmlyc3QiLCJsYXN0IiwicmV0IiwicHJvY2VzcyIsIm5leHRUaWNrIiwid3JpdGFibGUiLCJyZWFkYWJsZSIsIndyYXAiLCJmb3JFYWNoIiwic3RyZWFtIiwiaSIsIm5leHQiLCJvbiIsImVtaXQiLCJiaW5kIiwiZW5kZWQiLCJlbmQiLCJlcnIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/multipipe/index.js\n");

/***/ })

};
;